animation <- image_join(slide1, slide2, slide3, slide4, slide5) %>%
image_animate( fps = 1)
# Step 6: Save the animated GIF
image_write(animation, "data_story.gif")
library(magick)
# Step 2: Load your visualizations saved as image files
plot1 <- image_read("plot1.png")
plot2 <- image_read("plot2.png")
plot3 <- image_read("plot3.png")
# Step 3: Create each slide with its content
slide1 <- image_blank(2000, 2000, "#FFFFFF") %>%
image_annotate( "Analyzing League of Legends Videos", size = 40, color = "#000000", gravity = "center")
slide2 <- image_blank(2000, 2000, "cyan") %>%
image_composite(plot1, offset = "+50+50") %>%
image_annotate("Visualization 1: Description of what it reveals", size = 40, color = "#000000", gravity = "south")
slide3 <- image_blank(2500, 2000, "cyan") %>%
image_composite( plot2, offset = "+50+50") %>%
image_annotate( "Visualization 2: Description of what it reveals", size = 40, color = "#000000", gravity = "south")
slide4 <- image_blank(2000, 1200, "cyan") %>%
image_composite(plot3, offset = "+50+50") %>%
image_annotate( "Visualization 3: Description of what it reveals", size = 40, color = "#000000", gravity = "south")
slide5 <- image_blank(2000, 1200, "cyan") %>%
image_annotate( "Overall, I learned that League of Legend videos that involve the name 'Faker' have the
potential to get really high views. Looking at the comments of these youtube videos we
can see that on average their seem to be about 402 commments per video. Also by looking
at the likes on videos longer than 10 minutes and shorter than 10 minutes seperately,
we can see that videos longer than 10 minutes seem to be better recieved as
they have more likes.", size = 35, color = "#000000", gravity = "center")
# Step 4: Define the duration for each slide
slide_duration <- rep(5, 5) # 5 seconds for each slide
# Step 5: Combine all slides into an animated GIF
animation <- image_join(slide1, slide2, slide3, slide4, slide5) %>%
image_animate( fps = 1)
# Step 6: Save the animated GIF
image_write(animation, "data_story.gif")
library(magick)
# Step 2: Load your visualizations saved as image files
plot1 <- image_read("plot1.png")
plot2 <- image_read("plot2.png")
plot3 <- image_read("plot3.png")
# Step 3: Create each slide with its content
slide1 <- image_blank(2000, 2000, "#FFFFFF") %>%
image_annotate( "Analyzing League of Legends Videos", size = 40, color = "#000000", gravity = "center")
slide2 <- image_blank(2000, 2000, "cyan") %>%
image_composite(plot1, offset = "+50+50") %>%
image_annotate("Visualization 1: Description of what it reveals", size = 40, color = "#000000", gravity = "south")
slide3 <- image_blank(2000, 2000, "cyan") %>%
image_composite( plot2, offset = "+50+50") %>%
image_annotate( "Visualization 2: Description of what it reveals", size = 40, color = "#000000", gravity = "south")
slide4 <- image_blank(2000, 1200, "cyan") %>%
image_composite(plot3, offset = "+50+50") %>%
image_annotate( "Visualization 3: Description of what it reveals", size = 40, color = "#000000", gravity = "south")
slide5 <- image_blank(2000, 1200, "cyan") %>%
image_annotate( "Overall, I learned that League of Legend videos that involve the name 'Faker' have the
potential to get really high views. Looking at the comments of these youtube videos we
can see that on average their seem to be about 402 commments per video. Also by looking
at the likes on videos longer than 10 minutes and shorter than 10 minutes seperately,
we can see that videos longer than 10 minutes seem to be better recieved as
they have more likes.", size = 35, color = "#000000", gravity = "center")
# Step 4: Define the duration for each slide
slide_duration <- rep(5, 5) # 5 seconds for each slide
# Step 5: Combine all slides into an animated GIF
animation <- image_join(slide1, slide2, slide3, slide4, slide5) %>%
image_animate( fps = 1)
# Step 6: Save the animated GIF
image_write(animation, "data_story.gif")
library(magick)
# Step 2: Load your visualizations saved as image files
plot1 <- image_read("plot1.png")
plot2 <- image_read("plot2.png")
plot3 <- image_read("plot3.png")
# Step 3: Create each slide with its content
slide1 <- image_blank(2000, 2000, "#FFFFFF") %>%
image_annotate( "Analyzing League of Legends Videos", size = 40, color = "#000000", gravity = "center")
slide2 <- image_blank(2000, 2000, "cyan") %>%
image_composite(plot1, offset = "+50+50") %>%
image_annotate("Visualization 1: Description of what it reveals", size = 40, color = "#000000", gravity = "south")
slide3 <- image_blank(2000, 2000, "cyan") %>%
image_composite( plot2, offset = "+50+50") %>%
image_annotate( "Visualization 2: Description of what it reveals", size = 40, color = "#000000", gravity = "south")
slide4 <- image_blank(2000, 2000, "cyan") %>%
image_composite(plot3, offset = "+50+50") %>%
image_annotate( "Visualization 3: Description of what it reveals", size = 40, color = "#000000", gravity = "south")
slide5 <- image_blank(2000, 2000, "cyan") %>%
image_annotate( "Overall, I learned that League of Legend videos that involve the name 'Faker' have the
potential to get really high views. Looking at the comments of these youtube videos we
can see that on average their seem to be about 402 commments per video. Also by looking
at the likes on videos longer than 10 minutes and shorter than 10 minutes seperately,
we can see that videos longer than 10 minutes seem to be better recieved as
they have more likes.", size = 35, color = "#000000", gravity = "center")
# Step 4: Define the duration for each slide
slide_duration <- rep(5, 5) # 5 seconds for each slide
# Step 5: Combine all slides into an animated GIF
animation <- image_join(slide1, slide2, slide3, slide4, slide5) %>%
image_animate( fps = 1)
# Step 6: Save the animated GIF
image_write(animation, "data_story.gif")
library(tidyverse)
youtube_data <- read.csv('https://docs.google.com/spreadsheets/d/e/2PACX-1vQKPXO2ualEZnThidWU7Lvz8xE2xHjO_fsc45OpvO5w0bFEn3paR-h6LsJ2IQnYdwaRvpd5Lfltiqm0/pub?gid=0&single=true&output=csv')
iwd <- youtube_data %>%
filter(channelName == ('@IWDominatelol'))
mid <- youtube_data %>%
filter(channelName == ('@midbeast9495'))
faker_data <- youtube_data %>%
mutate(Faker = ifelse(str_detect(tolower(title), 'faker'),'Is in the Title', 'Is not in the Title'))
plot_1 <- faker_data %>%
ggplot() +
geom_bar(aes(x = title, y = viewCount, fill = Faker), stat = "identity") +
labs(title = "View Count for Videos with 'Faker' in Title", x = "Videos", y = "View Count") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
ggsave("plot1.png", plot = plot_1, width = 6, height = 4, dpi = 300)
mean_comments <- youtube_data$commentCount %>%
mean()
plot_2 <- youtube_data %>%
ggplot() +
geom_point(aes(y = commentCount, x = videoId), colour = "cyan") +
labs(title = "Number of comments per video", x = "Videos", y = "Comment Count") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
geom_hline(yintercept = mean_comments, size = 1, colour = "red") +
annotate("text", x = Inf, y = 0, label = "Average Number of Comments", hjust = 1, vjust = 1, color = "red")
ggsave("plot2.png", plot = plot_2, width = 6, height = 4, dpi = 300)
new_data <- youtube_data %>%
mutate(ten_minute = ifelse(duration > 600, "Longer", "Shorter")) %>%
group_by(ten_minute) %>%
summarise(mean_likes = mean(likeCount))
plot_3 <- new_data %>% ggplot() +
geom_col(aes(x = ten_minute, y = mean_likes), fill = "cyan") +
labs(title = "Average Likes for Videos Long or Shorter than 10 Minutes", x = "Longer or Short than 10 Minutes", y = "Average Likes")
ggsave("plot3.png", plot = plot_3, width = 6, height = 4, dpi = 300)
library(tidyverse)
youtube_data <- read.csv('https://docs.google.com/spreadsheets/d/e/2PACX-1vQKPXO2ualEZnThidWU7Lvz8xE2xHjO_fsc45OpvO5w0bFEn3paR-h6LsJ2IQnYdwaRvpd5Lfltiqm0/pub?gid=0&single=true&output=csv')
iwd <- youtube_data %>%
filter(channelName == ('@IWDominatelol'))
mid <- youtube_data %>%
filter(channelName == ('@midbeast9495'))
faker_data <- youtube_data %>%
mutate(Faker = ifelse(str_detect(tolower(title), 'faker'),'Is in the Title', 'Is not in the Title'))
plot_1 <- faker_data %>%
ggplot() +
geom_bar(aes(x = title, y = viewCount, fill = Faker), stat = "identity") +
labs(title = "View Count for Videos with 'Faker' in Title", x = "Videos", y = "View Count") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
ggsave("plot1.png", plot = plot_1, width = 6, height = 4, dpi = 300)
mean_comments <- youtube_data$commentCount %>%
mean()
plot_2 <- youtube_data %>%
ggplot() +
geom_point(aes(y = commentCount, x = videoId), colour = "cyan") +
labs(title = "Number of comments per video", x = "Videos", y = "Comment Count") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
geom_hline(yintercept = mean_comments, size = 1, colour = "red") +
annotate("text", x = Inf, y = 0, label = "Average Number of Comments", hjust = 1, vjust = 1, color = "red")
ggsave("plot2.png", plot = plot_2, width = 6, height = 4, dpi = 300)
new_data <- youtube_data %>%
mutate(ten_minute = ifelse(duration > 600, "Longer", "Shorter")) %>%
group_by(ten_minute) %>%
summarise(mean_likes = mean(likeCount))
plot_3 <- new_data %>% ggplot() +
geom_col(aes(x = ten_minute, y = mean_likes), fill = "cyan") +
labs(title = "Average Likes for Videos Long or Shorter than 10 Minutes", x = "Longer or Short than 10 Minutes", y = "Average Likes")
ggsave("plot3.png", plot = plot_3, width = 6, height = 4, dpi = 300)
library(tidyverse)
youtube_data <- read.csv('https://docs.google.com/spreadsheets/d/e/2PACX-1vQKPXO2ualEZnThidWU7Lvz8xE2xHjO_fsc45OpvO5w0bFEn3paR-h6LsJ2IQnYdwaRvpd5Lfltiqm0/pub?gid=0&single=true&output=csv')
iwd <- youtube_data %>%
filter(channelName == ('@IWDominatelol'))
mid <- youtube_data %>%
filter(channelName == ('@midbeast9495'))
faker_data <- youtube_data %>%
mutate(Faker = ifelse(str_detect(tolower(title), 'faker'),'Is in the Title', 'Is not in the Title'))
plot_1 <- faker_data %>%
ggplot() +
geom_bar(aes(x = title, y = viewCount, fill = Faker), stat = "identity") +
labs(title = "View Count for Videos with 'Faker' in Title", x = "Videos", y = "View Count") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
ggsave("plot1.png", plot = plot_1, width = 6, height = 4, dpi = 300)
mean_comments <- youtube_data$commentCount %>%
mean()
plot_2 <- youtube_data %>%
ggplot() +
geom_point(aes(y = commentCount, x = videoId), colour = "cyan") +
labs(title = "Number of comments per video", x = "Videos", y = "Comment Count") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
geom_hline(yintercept = mean_comments, size = 1, colour = "red") +
annotate("text", x = Inf, y = 0, label = "Average Number of Comments", hjust = 1, vjust = 1, color = "red")
ggsave("plot2.png", plot = plot_2, width = 6, height = 4, dpi = 300)
new_data <- youtube_data %>%
mutate(ten_minute = ifelse(duration > 600, "Longer", "Shorter")) %>%
group_by(ten_minute) %>%
summarise(mean_likes = mean(likeCount))
plot_3 <- new_data %>% ggplot() +
geom_col(aes(x = ten_minute, y = mean_likes), fill = "cyan") +
labs(title = "Average Likes for Videos Long or Shorter than 10 Minutes", x = "Longer or Short than 10 Minutes", y = "Average Likes")
ggsave("plot3.png", plot = plot_3, width = 6, height = 4, dpi = 300)
library(magick)
# Step 2: Load your visualizations saved as image files
plot1 <- image_read("plot1.png")
plot2 <- image_read("plot2.png")
plot3 <- image_read("plot3.png")
# Step 3: Create each slide with its content
slide1 <- image_blank(2000, 2000, "#FFFFFF") %>%
image_annotate( "Analyzing League of Legends Videos", size = 40, color = "#000000", gravity = "center")
slide2 <- image_blank(2000, 2000, "cyan") %>%
image_composite(plot1, offset = "+50+50") %>%
image_annotate("Visualization 1: Description of what it reveals", size = 40, color = "#000000", gravity = "south")
slide3 <- image_blank(2000, 2000, "cyan") %>%
image_composite( plot2, offset = "+50+50") %>%
image_annotate( "Visualization 2: Description of what it reveals", size = 40, color = "#000000", gravity = "south")
slide4 <- image_blank(2000, 2000, "cyan") %>%
image_composite(plot3, offset = "+50+50") %>%
image_annotate( "Visualization 3: Description of what it reveals", size = 40, color = "#000000", gravity = "south")
slide5 <- image_blank(2000, 2000, "cyan") %>%
image_annotate( "Overall, I learned that League of Legend videos that involve the name 'Faker' have the
potential to get really high views. Looking at the comments of these youtube videos we
can see that on average their seem to be about 402 commments per video. Also by looking
at the likes on videos longer than 10 minutes and shorter than 10 minutes seperately,
we can see that videos longer than 10 minutes seem to be better recieved as
they have more likes.", size = 35, color = "#000000", gravity = "center")
# Step 4: Define the duration for each slide
slide_duration <- rep(5, 5) # 5 seconds for each slide
# Step 5: Combine all slides into an animated GIF
animation <- image_join(slide1, slide2, slide3, slide4, slide5) %>%
image_animate( fps = 1)
# Step 6: Save the animated GIF
image_write(animation, "data_story.gif")
library(magick)
# Step 2: Load your visualizations saved as image files
plot1 <- image_read("plot1.png")
plot2 <- image_read("plot2.png")
plot3 <- image_read("plot3.png")
# Step 3: Create each slide with its content
slide1 <- image_blank(2000, 2000, "#FFFFFF") %>%
image_annotate( "Analyzing League of Legends Videos", size = 40, color = "#000000", gravity = "center")
slide2 <- image_blank(2000, 2000, "cyan") %>%
image_composite(plot1, offset = "+50+50") %>%
image_annotate("Visualization 1: Description of what it reveals", size = 40, color = "#000000", gravity = "south")
slide3 <- image_blank(2000, 2000, "cyan") %>%
image_composite( plot2, offset = "+50+50") %>%
image_annotate( "Visualization 2: Description of what it reveals", size = 40, color = "#000000", gravity = "south")
slide4 <- image_blank(2000, 2000, "cyan") %>%
image_composite(plot3, offset = "+50+50") %>%
image_annotate( "Visualization 3: Description of what it reveals", size = 40, color = "#000000", gravity = "south")
slide5 <- image_blank(2000, 2000, "cyan") %>%
image_annotate( "Overall, I learned that League of Legend videos that involve the name 'Faker' have the
potential to get really high views. Looking at the comments of these youtube videos we
can see that on average their seem to be about 402 commments per video. Also by looking
at the likes on videos longer than 10 minutes and shorter than 10 minutes seperately,
we can see that videos longer than 10 minutes seem to be better recieved as
they have more likes.", size = 40, color = "#000000", gravity = "center")
# Step 4: Define the duration for each slide
slide_duration <- rep(5, 5) # 5 seconds for each slide
# Step 5: Combine all slides into an animated GIF
animation <- image_join(slide1, slide2, slide3, slide4, slide5) %>%
image_animate( fps = 1)
# Step 6: Save the animated GIF
image_write(animation, "data_story.gif")
library(magick)
# Step 2: Load your visualizations saved as image files
plot1 <- image_read("plot1.png")
plot2 <- image_read("plot2.png")
plot3 <- image_read("plot3.png")
# Step 3: Create each slide with its content
slide1 <- image_blank(2000, 2000, "#FFFFFF") %>%
image_annotate( "Analyzing League of Legends Videos", size = 40, color = "#000000", gravity = "center")
slide2 <- image_blank(2000, 2000, "cyan") %>%
image_composite(plot1, offset = "+50+50") %>%
image_annotate("Analyzing videos with 'Faker' in the title or not to see if there is a difference in the view count", size = 40, color = "#000000", gravity = "south")
slide3 <- image_blank(2000, 2000, "cyan") %>%
image_composite( plot2, offset = "+50+50") %>%
image_annotate( "Visualization 2: Description of what it reveals", size = 40, color = "#000000", gravity = "south")
slide4 <- image_blank(2000, 2000, "cyan") %>%
image_composite(plot3, offset = "+50+50") %>%
image_annotate( "Visualization 3: Description of what it reveals", size = 40, color = "#000000", gravity = "south")
slide5 <- image_blank(2000, 2000, "cyan") %>%
image_annotate( "Overall, I learned that League of Legend videos that involve the name 'Faker' have the
potential to get really high views. Looking at the comments of these youtube videos we
can see that on average their seem to be about 402 commments per video. Also by looking
at the likes on videos longer than 10 minutes and shorter than 10 minutes seperately,
we can see that videos longer than 10 minutes seem to be better recieved as
they have more likes.", size = 40, color = "#000000", gravity = "center")
# Step 4: Define the duration for each slide
slide_duration <- rep(5, 5) # 5 seconds for each slide
# Step 5: Combine all slides into an animated GIF
animation <- image_join(slide1, slide2, slide3, slide4, slide5) %>%
image_animate( fps = 1)
# Step 6: Save the animated GIF
image_write(animation, "data_story.gif")
library(tidyverse)
youtube_data <- read.csv('https://docs.google.com/spreadsheets/d/e/2PACX-1vQKPXO2ualEZnThidWU7Lvz8xE2xHjO_fsc45OpvO5w0bFEn3paR-h6LsJ2IQnYdwaRvpd5Lfltiqm0/pub?gid=0&single=true&output=csv')
iwd <- youtube_data %>%
filter(channelName == ('@IWDominatelol'))
mid <- youtube_data %>%
filter(channelName == ('@midbeast9495'))
faker_data <- youtube_data %>%
mutate(Faker = ifelse(str_detect(tolower(title), 'faker'),'Is in the Title', 'Is not in the Title'))
plot_1 <- faker_data %>%
ggplot() +
geom_bar(aes(x = title, y = viewCount, fill = Faker), stat = "identity") +
labs(title = "View Count for Videos with 'Faker' in Title", x = "Videos", y = "View Count") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
ggsave("plot1.png", plot = plot_1, width = 6, height = 4, dpi = 300)
mean_comments <- youtube_data$commentCount %>%
mean()
plot_2 <- faker_data %>%
ggplot() +
geom_point(aes(y = commentCount, x = videoId, fill = Faker), colour = "cyan") +
labs(title = "Number of comments per video", x = "Videos", y = "Comment Count") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
geom_hline(yintercept = mean_comments, size = 1, colour = "red") +
annotate("text", x = Inf, y = 0, label = "Average Number of Comments", hjust = 1, vjust = 1, color = "red")
ggsave("plot2.png", plot = plot_2, width = 6, height = 4, dpi = 300)
new_data <- youtube_data %>%
mutate(ten_minute = ifelse(duration > 600, "Longer", "Shorter")) %>%
group_by(ten_minute) %>%
summarise(mean_likes = mean(likeCount))
plot_3 <- new_data %>% ggplot() +
geom_col(aes(x = ten_minute, y = mean_likes), fill = "cyan") +
labs(title = "Average Likes for Videos Long or Shorter than 10 Minutes", x = "Longer or Short than 10 Minutes", y = "Average Likes")
ggsave("plot3.png", plot = plot_3, width = 6, height = 4, dpi = 300)
library(tidyverse)
youtube_data <- read.csv('https://docs.google.com/spreadsheets/d/e/2PACX-1vQKPXO2ualEZnThidWU7Lvz8xE2xHjO_fsc45OpvO5w0bFEn3paR-h6LsJ2IQnYdwaRvpd5Lfltiqm0/pub?gid=0&single=true&output=csv')
iwd <- youtube_data %>%
filter(channelName == ('@IWDominatelol'))
mid <- youtube_data %>%
filter(channelName == ('@midbeast9495'))
faker_data <- youtube_data %>%
mutate(Faker = ifelse(str_detect(tolower(title), 'faker'),'Is in the Title', 'Is not in the Title'))
plot_1 <- faker_data %>%
ggplot() +
geom_bar(aes(x = title, y = viewCount, fill = Faker), stat = "identity") +
labs(title = "View Count for Videos with 'Faker' in Title", x = "Videos", y = "View Count") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
ggsave("plot1.png", plot = plot_1, width = 6, height = 4, dpi = 300)
mean_comments <- youtube_data$commentCount %>%
mean()
plot_2 <- faker_data %>%
ggplot() +
geom_point(aes(y = commentCount, x = videoId, fill = Faker)) +
labs(title = "Number of comments per video", x = "Videos", y = "Comment Count") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
geom_hline(yintercept = mean_comments, size = 1, colour = "red") +
annotate("text", x = Inf, y = 0, label = "Average Number of Comments", hjust = 1, vjust = 1)
ggsave("plot2.png", plot = plot_2, width = 6, height = 4, dpi = 300)
new_data <- youtube_data %>%
mutate(ten_minute = ifelse(duration > 600, "Longer", "Shorter")) %>%
group_by(ten_minute) %>%
summarise(mean_likes = mean(likeCount))
plot_3 <- new_data %>% ggplot() +
geom_col(aes(x = ten_minute, y = mean_likes), fill = "cyan") +
labs(title = "Average Likes for Videos Long or Shorter than 10 Minutes", x = "Longer or Short than 10 Minutes", y = "Average Likes")
ggsave("plot3.png", plot = plot_3, width = 6, height = 4, dpi = 300)
library(tidyverse)
youtube_data <- read.csv('https://docs.google.com/spreadsheets/d/e/2PACX-1vQKPXO2ualEZnThidWU7Lvz8xE2xHjO_fsc45OpvO5w0bFEn3paR-h6LsJ2IQnYdwaRvpd5Lfltiqm0/pub?gid=0&single=true&output=csv')
iwd <- youtube_data %>%
filter(channelName == ('@IWDominatelol'))
mid <- youtube_data %>%
filter(channelName == ('@midbeast9495'))
faker_data <- youtube_data %>%
mutate(Faker = ifelse(str_detect(tolower(title), 'faker'),'Is in the Title', 'Is not in the Title'))
plot_1 <- faker_data %>%
ggplot() +
geom_bar(aes(x = title, y = viewCount, fill = Faker), stat = "identity") +
labs(title = "View Count for Videos with 'Faker' in Title", x = "Videos", y = "View Count") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
ggsave("plot1.png", plot = plot_1, width = 6, height = 4, dpi = 300)
mean_comments <- youtube_data$commentCount %>%
mean()
plot_2 <- faker_data %>%
ggplot() +
geom_point(aes(y = commentCount, x = videoId, colour = Faker)) +
labs(title = "Number of comments per video", x = "Videos", y = "Comment Count") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
geom_hline(yintercept = mean_comments, size = 1, colour = "red") +
annotate("text", x = Inf, y = 0, label = "Average Number of Comments", hjust = 1, vjust = 1, color = "red")
ggsave("plot2.png", plot = plot_2, width = 6, height = 4, dpi = 300)
new_data <- youtube_data %>%
mutate(ten_minute = ifelse(duration > 600, "Longer", "Shorter")) %>%
group_by(ten_minute) %>%
summarise(mean_likes = mean(likeCount))
plot_3 <- new_data %>% ggplot() +
geom_col(aes(x = ten_minute, y = mean_likes), fill = "cyan") +
labs(title = "Average Likes for Videos Long or Shorter than 10 Minutes", x = "Longer or Short than 10 Minutes", y = "Average Likes")
ggsave("plot3.png", plot = plot_3, width = 6, height = 4, dpi = 300)
library(magick)
# Step 2: Load your visualizations saved as image files
plot1 <- image_read("plot1.png")
plot2 <- image_read("plot2.png")
plot3 <- image_read("plot3.png")
# Step 3: Create each slide with its content
slide1 <- image_blank(2000, 2000, "#FFFFFF") %>%
image_annotate( "Analyzing League of Legends Videos", size = 40, color = "#000000", gravity = "center")
slide2 <- image_blank(2000, 2000, "cyan") %>%
image_composite(plot1, offset = "+50+50") %>%
image_annotate("Analyzing videos with 'Faker' in the title or not to see if there is a difference in the view count", size = 40, color = "#000000", gravity = "south")
slide3 <- image_blank(2000, 2000, "cyan") %>%
image_composite( plot2, offset = "+50+50") %>%
image_annotate( "Trying to see if there an above average number of comments when 'Faker' is in the title", size = 40, color = "#000000", gravity = "south")
slide4 <- image_blank(2000, 2000, "cyan") %>%
image_composite(plot3, offset = "+50+50") %>%
image_annotate( "Do people like longer or shorter videos", size = 40, color = "#000000", gravity = "south")
slide5 <- image_blank(2000, 2000, "cyan") %>%
image_annotate( "Overall, I learned that League of Legend videos that involve the name 'Faker' have the
potential to get really high views. Looking at the comments of these youtube videos we
can see that on average their seem to be about 402 commments per video. Also by looking
at the likes on videos longer than 10 minutes and shorter than 10 minutes seperately,
we can see that videos longer than 10 minutes seem to be better recieved as
they have more likes.", size = 40, color = "#000000", gravity = "center")
# Step 4: Define the duration for each slide
slide_duration <- rep(5, 5) # 5 seconds for each slide
# Step 5: Combine all slides into an animated GIF
animation <- image_join(slide1, slide2, slide3, slide4, slide5) %>%
image_animate( fps = 1)
# Step 6: Save the animated GIF
image_write(animation, "data_story.gif")
library(tidyverse)
youtube_data <- read.csv('https://docs.google.com/spreadsheets/d/e/2PACX-1vQKPXO2ualEZnThidWU7Lvz8xE2xHjO_fsc45OpvO5w0bFEn3paR-h6LsJ2IQnYdwaRvpd5Lfltiqm0/pub?gid=0&single=true&output=csv')
iwd <- youtube_data %>%
filter(channelName == ('@IWDominatelol'))
mid <- youtube_data %>%
filter(channelName == ('@midbeast9495'))
faker_data <- youtube_data %>%
mutate(Faker = ifelse(str_detect(tolower(title), 'faker'),'Is in the Title', 'Is not in the Title'))
plot_1 <- faker_data %>%
ggplot() +
geom_bar(aes(x = title, y = viewCount, fill = Faker), stat = "identity") +
labs(title = "View Count for Videos with 'Faker' in Title", x = "Videos", y = "View Count") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
ggsave("plot1.png", plot = plot_1, width = 6, height = 4, dpi = 300)
mean_comments <- youtube_data$commentCount %>%
mean()
plot_2 <- faker_data %>%
ggplot() +
geom_point(aes(y = commentCount, x = videoId, colour = Faker)) +
labs(title = "Number of comments per video", x = "Videos", y = "Comment Count") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
geom_hline(yintercept = mean_comments, size = 1, colour = "red") +
annotate("text", x = Inf, y = 0, label = "Average Number of Comments", hjust = 1, vjust = 1, color = "red")
ggsave("plot2.png", plot = plot_2, width = 6, height = 4, dpi = 300)
new_data <- faker_data %>%
mutate(ten_minute = ifelse(duration > 600, "Longer", "Shorter")) %>%
group_by(ten_minute) %>%
summarise(mean_likes = mean(likeCount))
plot_3 <- new_data %>% ggplot() +
geom_col(aes(x = ten_minute, y = mean_likes), fill = faker) +
labs(title = "Average Likes for Videos Long or Shorter than 10 Minutes", x = "Longer or Short than 10 Minutes", y = "Average Likes")
plot_3 <- new_data %>% ggplot() +
geom_col(aes(x = ten_minute, y = mean_likes), fill = Faker) +
labs(title = "Average Likes for Videos Long or Shorter than 10 Minutes", x = "Longer or Short than 10 Minutes", y = "Average Likes")
library(tidyverse)
youtube_data <- read.csv('https://docs.google.com/spreadsheets/d/e/2PACX-1vQKPXO2ualEZnThidWU7Lvz8xE2xHjO_fsc45OpvO5w0bFEn3paR-h6LsJ2IQnYdwaRvpd5Lfltiqm0/pub?gid=0&single=true&output=csv')
iwd <- youtube_data %>%
filter(channelName == ('@IWDominatelol'))
mid <- youtube_data %>%
filter(channelName == ('@midbeast9495'))
faker_data <- youtube_data %>%
mutate(Faker = ifelse(str_detect(tolower(title), 'faker'),'Is in the Title', 'Is not in the Title'))
plot_1 <- faker_data %>%
ggplot() +
geom_bar(aes(x = title, y = viewCount, fill = Faker), stat = "identity") +
labs(title = "View Count for Videos with 'Faker' in Title", x = "Videos", y = "View Count") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
ggsave("plot1.png", plot = plot_1, width = 6, height = 4, dpi = 300)
mean_comments <- youtube_data$commentCount %>%
mean()
plot_2 <- faker_data %>%
ggplot() +
geom_point(aes(y = commentCount, x = videoId, colour = Faker)) +
labs(title = "Number of comments per video", x = "Videos", y = "Comment Count") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
geom_hline(yintercept = mean_comments, size = 1, colour = "red") +
annotate("text", x = Inf, y = 0, label = "Average Number of Comments", hjust = 1, vjust = 1, color = "red")
ggsave("plot2.png", plot = plot_2, width = 6, height = 4, dpi = 300)
new_data <- faker_data %>%
mutate(ten_minute = ifelse(duration > 600, "Longer", "Shorter")) %>%
group_by(ten_minute) %>%
summarise(mean_likes = mean(likeCount))
plot_3 <- new_data %>% ggplot() +
geom_col(aes(x = ten_minute, y = mean_likes), fill = Faker) +
labs(title = "Average Likes for Videos Long or Shorter than 10 Minutes", x = "Longer or Short than 10 Minutes", y = "Average Likes")
library(tidyverse)
youtube_data <- read.csv('https://docs.google.com/spreadsheets/d/e/2PACX-1vQKPXO2ualEZnThidWU7Lvz8xE2xHjO_fsc45OpvO5w0bFEn3paR-h6LsJ2IQnYdwaRvpd5Lfltiqm0/pub?gid=0&single=true&output=csv')
iwd <- youtube_data %>%
filter(channelName == ('@IWDominatelol'))
mid <- youtube_data %>%
filter(channelName == ('@midbeast9495'))
faker_data <- youtube_data %>%
mutate(Faker = ifelse(str_detect(tolower(title), 'faker'),'Is in the Title', 'Is not in the Title'))
plot_1 <- faker_data %>%
ggplot() +
geom_bar(aes(x = title, y = viewCount, fill = Faker), stat = "identity") +
labs(title = "View Count for Videos with 'Faker' in Title", x = "Videos", y = "View Count") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
ggsave("plot1.png", plot = plot_1, width = 6, height = 4, dpi = 300)
mean_comments <- youtube_data$commentCount %>%
mean()
plot_2 <- faker_data %>%
ggplot() +
geom_point(aes(y = commentCount, x = videoId, fill = Faker)) +
labs(title = "Number of comments per video", x = "Videos", y = "Comment Count") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
geom_hline(yintercept = mean_comments, size = 1, colour = "red") +
annotate("text", x = Inf, y = 0, label = "Average Number of Comments", hjust = 1, vjust = 1, color = "red")
ggsave("plot2.png", plot = plot_2, width = 6, height = 4, dpi = 300)
new_data <- youtube_data %>%
mutate(ten_minute = ifelse(duration > 600, "Longer", "Shorter")) %>%
group_by(ten_minute) %>%
summarise(mean_likes = mean(likeCount))
plot_3 <- new_data %>% ggplot() +
geom_col(aes(x = ten_minute, y = mean_likes), fill = "cyan") +
labs(title = "Average Likes for Videos Long or Shorter than 10 Minutes", x = "Longer or Short than 10 Minutes", y = "Average Likes")
ggsave("plot3.png", plot = plot_3, width = 6, height = 4, dpi = 300)
---
title: "Project 4"
